/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package core.views;

import core.models.airport.Flight;
import core.models.airport.Location;
import core.models.airport.Passenger;
import core.models.airport.Plane;
import com.formdev.flatlaf.FlatDarkLaf;
import core.controllers.FlightController;
import core.controllers.PassengerController;
import core.controllers.PlaneController;
import core.controllers.LocationController;
import core.controllers.utils.Response;
import java.awt.Color;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 
 */
public class AirportFrame extends javax.swing.JFrame {

    /**
     * Creates new form AirportFrame
     */
    private int x, y;
    private ArrayList<Passenger> passengers;
    private ArrayList<Plane> planes;
    private ArrayList<Location> locations;
    private ArrayList<Flight> flights;

    public AirportFrame() {
        initComponents();

        this.passengers = new ArrayList<>();
        this.planes = new ArrayList<>();
        this.locations = new ArrayList<>();
        this.flights = new ArrayList<>();

        this.setBackground(new Color(0, 0, 0, 0));
        this.setLocationRelativeTo(null);

        this.generateMonths();
        this.generateDays();
        this.generateHours();
        this.generateMinutes();
        this.blockPanels();
    }

    private void blockPanels() {
        //9, 11
        for (int i = 1; i < jTabbedPane1.getTabCount(); i++) {
            if (i != 9 && i != 11) {
                jTabbedPane1.setEnabledAt(i, false);
            }
        }
    }

    private void generateMonths() {
        for (int i = 1; i < 13; i++) {
            MONTH.addItem("" + i);
            Month_Date.addItem("" + i);
            Update_Month.addItem("" + i);
        }
    }

    private void generateDays() {
        for (int i = 1; i < 32; i++) {
            DAY.addItem("" + i);
            Day_date.addItem("" + i);
            Update_Day.addItem("" + i);
        }
    }

    private void generateHours() {
        for (int i = 0; i < 24; i++) {
            Hour_Date.addItem("" + i);
            Hour_Duration.addItem("" + i);
            Hour.addItem("" + i);
            FlightDelay_Hour.addItem("" + i);
        }
    }

    private void generateMinutes() {
        for (int i = 0; i < 60; i++) {
            Minute_Date.addItem("" + i);
            Minute_duration.addItem("" + i);
            Minute.addItem("" + i);
            FlightDelay_Minute.addItem("" + i);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRound1 = new core.views.PanelRound();
        panelRound2 = new core.views.PanelRound();
        jButton13 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        Administration = new javax.swing.JPanel();
        user = new javax.swing.JRadioButton();
        administrator = new javax.swing.JRadioButton();
        userSelect = new javax.swing.JComboBox<>();
        PassegerRegistration = new javax.swing.JPanel();
        country = new javax.swing.JLabel();
        id = new javax.swing.JLabel();
        fName = new javax.swing.JLabel();
        lName = new javax.swing.JLabel();
        birthdate = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        DialingCode = new javax.swing.JTextField();
        Id = new javax.swing.JTextField();
        Birthdate = new javax.swing.JTextField();
        Country = new javax.swing.JTextField();
        NumberPhone = new javax.swing.JTextField();
        phone = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        LastName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        MONTH = new javax.swing.JComboBox<>();
        FirstName = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        DAY = new javax.swing.JComboBox<>();
        Register = new javax.swing.JButton();
        AirplaneRegistration = new javax.swing.JPanel();
        id_Airplane = new javax.swing.JLabel();
        Airplane_Id = new javax.swing.JTextField();
        brand = new javax.swing.JLabel();
        Brand = new javax.swing.JTextField();
        Model = new javax.swing.JTextField();
        model = new javax.swing.JLabel();
        MaxCapacity = new javax.swing.JTextField();
        maxCapacity = new javax.swing.JLabel();
        Airline = new javax.swing.JTextField();
        airline = new javax.swing.JLabel();
        CreateAirline = new javax.swing.JButton();
        LocationRegistration = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        Airport_Id = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        Airport_Name = new javax.swing.JTextField();
        Airport_City = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        Airport_Country = new javax.swing.JTextField();
        Airport_latitude = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        Airport_Longitude = new javax.swing.JTextField();
        CreateLocation = new javax.swing.JButton();
        FlightRegistration = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        Flight_Id = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        Plane = new javax.swing.JComboBox<>();
        Location_Flight = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        ArrivalLocation = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        ScaleLocation = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        Year = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        Month_Date = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        Day_date = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        Hour_Date = new javax.swing.JComboBox<>();
        jLabel33 = new javax.swing.JLabel();
        Minute_Date = new javax.swing.JComboBox<>();
        Hour_Duration = new javax.swing.JComboBox<>();
        jLabel34 = new javax.swing.JLabel();
        Minute_duration = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        Hour = new javax.swing.JComboBox<>();
        Minute = new javax.swing.JComboBox<>();
        CreateFlight = new javax.swing.JButton();
        UpdateInfo = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        Update_Id = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        Update_fName = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        Update_lName = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        Update_Birthdate = new javax.swing.JTextField();
        Update_Month = new javax.swing.JComboBox<>();
        Update_Day = new javax.swing.JComboBox<>();
        Update_Number = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        Update_DialingCode = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        Update_Country = new javax.swing.JTextField();
        Update = new javax.swing.JButton();
        AddToFlight = new javax.swing.JPanel();
        Add_IdFlight = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        Flight = new javax.swing.JComboBox<>();
        Add = new javax.swing.JButton();
        ShowMyFligths = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableFligths = new javax.swing.JTable();
        RefreshMyFligths = new javax.swing.JButton();
        ShowAllPassegers = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablePassengers = new javax.swing.JTable();
        RefreshPassegers = new javax.swing.JButton();
        ShowAllFlights = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        FlightsTable = new javax.swing.JTable();
        TableAllFlights = new javax.swing.JButton();
        ShowPlanes = new javax.swing.JPanel();
        RefreshPlanes = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        TablePlanes = new javax.swing.JTable();
        ShowAllLocations = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        TableLocations = new javax.swing.JTable();
        RefreshLocations = new javax.swing.JButton();
        DelayFlight = new javax.swing.JPanel();
        FlightDelay_Hour = new javax.swing.JComboBox<>();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        FlightDelay_Id = new javax.swing.JComboBox<>();
        jLabel48 = new javax.swing.JLabel();
        FlightDelay_Minute = new javax.swing.JComboBox<>();
        Delay = new javax.swing.JButton();
        panelRound3 = new core.views.PanelRound();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Airport");
        setUndecorated(true);

        panelRound1.setRadius(40);
        panelRound1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panelRound2MouseDragged(evt);
            }
        });
        panelRound2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelRound2MousePressed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButton13.setText("X");
        jButton13.setBorderPainted(false);
        jButton13.setContentAreaFilled(false);
        jButton13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRound2Layout = new javax.swing.GroupLayout(panelRound2);
        panelRound2.setLayout(panelRound2Layout);
        panelRound2Layout.setHorizontalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound2Layout.createSequentialGroup()
                .addContainerGap(1083, Short.MAX_VALUE)
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        panelRound2Layout.setVerticalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound2Layout.createSequentialGroup()
                .addComponent(jButton13)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        panelRound1.add(panelRound2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, -1));

        jTabbedPane1.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N

        Administration.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        user.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        user.setText("User");
        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });
        Administration.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, -1, -1));

        administrator.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        administrator.setText("Administrator");
        administrator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                administratorActionPerformed(evt);
            }
        });
        Administration.add(administrator, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 164, -1, -1));

        userSelect.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        userSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select User" }));
        userSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userSelectActionPerformed(evt);
            }
        });
        Administration.add(userSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, 130, -1));

        jTabbedPane1.addTab("Administration", Administration);

        PassegerRegistration.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        country.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        country.setText("Country:");
        PassegerRegistration.add(country, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, -1, -1));

        id.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        id.setText("ID:");
        PassegerRegistration.add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        fName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        fName.setText("First Name:");
        PassegerRegistration.add(fName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        lName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        lName.setText("Last Name:");
        PassegerRegistration.add(lName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, -1, -1));

        birthdate.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        birthdate.setText("Birthdate:");
        PassegerRegistration.add(birthdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, -1));

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel6.setText("+");
        PassegerRegistration.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, 20, -1));

        DialingCode.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PassegerRegistration.add(DialingCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, 50, -1));

        Id.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdActionPerformed(evt);
            }
        });
        PassegerRegistration.add(Id, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 130, -1));

        Birthdate.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PassegerRegistration.add(Birthdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 90, -1));

        Country.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PassegerRegistration.add(Country, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, 130, -1));

        NumberPhone.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        NumberPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumberPhoneActionPerformed(evt);
            }
        });
        PassegerRegistration.add(NumberPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 130, -1));

        phone.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        phone.setText("Phone:");
        PassegerRegistration.add(phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel8.setText("-");
        PassegerRegistration.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, 30, -1));

        LastName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PassegerRegistration.add(LastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 130, -1));

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel9.setText("-");
        PassegerRegistration.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, 30, -1));

        MONTH.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        MONTH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));
        MONTH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MONTHActionPerformed(evt);
            }
        });
        PassegerRegistration.add(MONTH, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 280, -1, -1));

        FirstName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        PassegerRegistration.add(FirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 130, -1));

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel10.setText("-");
        PassegerRegistration.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 280, 30, -1));

        DAY.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        DAY.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));
        PassegerRegistration.add(DAY, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 280, -1, -1));

        Register.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Register.setText("Register");
        Register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterActionPerformed(evt);
            }
        });
        PassegerRegistration.add(Register, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 480, -1, -1));

        jTabbedPane1.addTab("Passenger registration", PassegerRegistration);

        AirplaneRegistration.setLayout(null);

        id_Airplane.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        id_Airplane.setText("ID:");
        AirplaneRegistration.add(id_Airplane);
        id_Airplane.setBounds(53, 96, 22, 25);

        Airplane_Id.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirplaneRegistration.add(Airplane_Id);
        Airplane_Id.setBounds(180, 93, 130, 31);

        brand.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        brand.setText("Brand:");
        AirplaneRegistration.add(brand);
        brand.setBounds(53, 157, 52, 25);

        Brand.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirplaneRegistration.add(Brand);
        Brand.setBounds(180, 154, 130, 31);

        Model.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirplaneRegistration.add(Model);
        Model.setBounds(180, 213, 130, 31);

        model.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        model.setText("Model:");
        AirplaneRegistration.add(model);
        model.setBounds(53, 216, 57, 25);

        MaxCapacity.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirplaneRegistration.add(MaxCapacity);
        MaxCapacity.setBounds(180, 273, 130, 31);

        maxCapacity.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        maxCapacity.setText("Max Capacity:");
        AirplaneRegistration.add(maxCapacity);
        maxCapacity.setBounds(53, 276, 114, 25);

        Airline.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        AirplaneRegistration.add(Airline);
        Airline.setBounds(180, 333, 130, 31);

        airline.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        airline.setText("Airline:");
        AirplaneRegistration.add(airline);
        airline.setBounds(53, 336, 70, 25);

        CreateAirline.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        CreateAirline.setText("Create");
        CreateAirline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateAirlineActionPerformed(evt);
            }
        });
        AirplaneRegistration.add(CreateAirline);
        CreateAirline.setBounds(490, 480, 120, 40);

        jTabbedPane1.addTab("Airplane registration", AirplaneRegistration);

        jLabel16.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel16.setText("Airport ID:");

        Airport_Id.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel17.setText("Airport name:");

        Airport_Name.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        Airport_City.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel18.setText("Airport city:");

        jLabel19.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel19.setText("Airport country:");

        Airport_Country.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        Airport_latitude.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel20.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel20.setText("Airport latitude:");

        jLabel21.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel21.setText("Airport longitude:");

        Airport_Longitude.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        CreateLocation.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        CreateLocation.setText("Create");
        CreateLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateLocationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LocationRegistrationLayout = new javax.swing.GroupLayout(LocationRegistration);
        LocationRegistration.setLayout(LocationRegistrationLayout);
        LocationRegistrationLayout.setHorizontalGroup(
            LocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LocationRegistrationLayout.createSequentialGroup()
                .addGroup(LocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LocationRegistrationLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(LocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21))
                        .addGap(80, 80, 80)
                        .addGroup(LocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Airport_Longitude, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Airport_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Airport_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Airport_City, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Airport_Country, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Airport_latitude, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(LocationRegistrationLayout.createSequentialGroup()
                        .addGap(515, 515, 515)
                        .addComponent(CreateLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(515, 515, 515))
        );
        LocationRegistrationLayout.setVerticalGroup(
            LocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LocationRegistrationLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(LocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(LocationRegistrationLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel17)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel18)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel19)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel20))
                    .addGroup(LocationRegistrationLayout.createSequentialGroup()
                        .addComponent(Airport_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(Airport_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(Airport_City, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(Airport_Country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(Airport_latitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addGroup(LocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(Airport_Longitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(CreateLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        jTabbedPane1.addTab("Location registration", LocationRegistration);

        jLabel22.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel22.setText("ID:");

        Flight_Id.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel23.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel23.setText("Plane:");

        Plane.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Plane.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plane" }));

        Location_Flight.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Location_Flight.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        jLabel24.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel24.setText("Departure location:");

        ArrivalLocation.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        ArrivalLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        jLabel25.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel25.setText("Arrival location:");

        jLabel26.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel26.setText("Scale location:");

        ScaleLocation.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        ScaleLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        jLabel27.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel27.setText("Duration:");

        jLabel28.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel28.setText("Duration:");

        jLabel29.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel29.setText("Departure date:");

        Year.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel30.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel30.setText("-");

        Month_Date.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Month_Date.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));
        Month_Date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Month_DateActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel31.setText("-");

        Day_date.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Day_date.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));

        jLabel32.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel32.setText("-");

        Hour_Date.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Hour_Date.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        jLabel33.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel33.setText("-");

        Minute_Date.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Minute_Date.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        Hour_Duration.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Hour_Duration.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        jLabel34.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel34.setText("-");

        Minute_duration.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Minute_duration.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        jLabel35.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel35.setText("-");

        Hour.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Hour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));
        Hour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HourActionPerformed(evt);
            }
        });

        Minute.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Minute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        CreateFlight.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        CreateFlight.setText("Create");
        CreateFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateFlightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FlightRegistrationLayout = new javax.swing.GroupLayout(FlightRegistration);
        FlightRegistration.setLayout(FlightRegistrationLayout);
        FlightRegistrationLayout.setHorizontalGroup(
            FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FlightRegistrationLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(FlightRegistrationLayout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ScaleLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FlightRegistrationLayout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ArrivalLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FlightRegistrationLayout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(46, 46, 46)
                        .addComponent(Location_Flight, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FlightRegistrationLayout.createSequentialGroup()
                        .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Flight_Id)
                            .addComponent(Plane, 0, 130, Short.MAX_VALUE))))
                .addGap(45, 45, 45)
                .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28)
                    .addComponent(jLabel29))
                .addGap(18, 18, 18)
                .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FlightRegistrationLayout.createSequentialGroup()
                        .addComponent(Year, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FlightRegistrationLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(Month_Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(FlightRegistrationLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(Day_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FlightRegistrationLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(Hour_Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(FlightRegistrationLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(Minute_Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))
                    .addGroup(FlightRegistrationLayout.createSequentialGroup()
                        .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FlightRegistrationLayout.createSequentialGroup()
                                .addComponent(Hour_Duration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(FlightRegistrationLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(Minute_duration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(FlightRegistrationLayout.createSequentialGroup()
                                .addComponent(Hour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(FlightRegistrationLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(Minute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FlightRegistrationLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CreateFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(530, 530, 530))
        );
        FlightRegistrationLayout.setVerticalGroup(
            FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FlightRegistrationLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FlightRegistrationLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel22))
                    .addComponent(Flight_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(Plane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Hour_Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(jLabel33)
                    .addComponent(Minute_Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(FlightRegistrationLayout.createSequentialGroup()
                        .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel24)
                                .addComponent(Location_Flight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel29))
                            .addComponent(Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Month_Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30)
                            .addComponent(jLabel31)
                            .addComponent(Day_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel25)
                                .addComponent(ArrivalLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel28))
                            .addComponent(Hour_Duration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34)
                            .addComponent(Minute_duration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Hour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel35)
                            .addComponent(Minute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(FlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel26)
                                .addComponent(ScaleLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel27)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addComponent(CreateFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        jTabbedPane1.addTab("Flight registration", FlightRegistration);

        jLabel36.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel36.setText("ID:");

        Update_Id.setEditable(false);
        Update_Id.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Update_Id.setEnabled(false);

        jLabel37.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel37.setText("First Name:");

        Update_fName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel38.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel38.setText("Last Name:");

        Update_lName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel39.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel39.setText("Birthdate:");

        Update_Birthdate.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        Update_Month.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Update_Month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));

        Update_Day.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Update_Day.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));

        Update_Number.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel40.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel40.setText("-");

        Update_DialingCode.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel41.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel41.setText("+");

        jLabel42.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel42.setText("Phone:");

        jLabel43.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel43.setText("Country:");

        Update_Country.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        Update.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UpdateInfoLayout = new javax.swing.GroupLayout(UpdateInfo);
        UpdateInfo.setLayout(UpdateInfoLayout);
        UpdateInfoLayout.setHorizontalGroup(
            UpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdateInfoLayout.createSequentialGroup()
                .addGroup(UpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UpdateInfoLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(UpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(UpdateInfoLayout.createSequentialGroup()
                                .addComponent(jLabel36)
                                .addGap(108, 108, 108)
                                .addComponent(Update_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(UpdateInfoLayout.createSequentialGroup()
                                .addComponent(jLabel37)
                                .addGap(41, 41, 41)
                                .addComponent(Update_fName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(UpdateInfoLayout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addGap(43, 43, 43)
                                .addComponent(Update_lName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(UpdateInfoLayout.createSequentialGroup()
                                .addComponent(jLabel39)
                                .addGap(55, 55, 55)
                                .addComponent(Update_Birthdate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(Update_Month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(Update_Day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(UpdateInfoLayout.createSequentialGroup()
                                .addComponent(jLabel42)
                                .addGap(56, 56, 56)
                                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(Update_DialingCode, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(Update_Number, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(UpdateInfoLayout.createSequentialGroup()
                                .addComponent(jLabel43)
                                .addGap(63, 63, 63)
                                .addComponent(Update_Country, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(UpdateInfoLayout.createSequentialGroup()
                        .addGap(507, 507, 507)
                        .addComponent(Update)))
                .addContainerGap(552, Short.MAX_VALUE))
        );
        UpdateInfoLayout.setVerticalGroup(
            UpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdateInfoLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(UpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel36)
                    .addComponent(Update_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(UpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37)
                    .addComponent(Update_fName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(UpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel38)
                    .addComponent(Update_lName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(UpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel39)
                    .addComponent(Update_Birthdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Update_Month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Update_Day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(UpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel42)
                    .addComponent(jLabel41)
                    .addComponent(Update_DialingCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40)
                    .addComponent(Update_Number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(UpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel43)
                    .addComponent(Update_Country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(Update)
                .addGap(113, 113, 113))
        );

        jTabbedPane1.addTab("Update info", UpdateInfo);

        Add_IdFlight.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Add_IdFlight.setEnabled(false);

        jLabel44.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel44.setText("ID:");

        jLabel45.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel45.setText("Flight:");

        Flight.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Flight.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Flight" }));

        Add.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddToFlightLayout = new javax.swing.GroupLayout(AddToFlight);
        AddToFlight.setLayout(AddToFlightLayout);
        AddToFlightLayout.setHorizontalGroup(
            AddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddToFlightLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(AddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel44)
                    .addComponent(jLabel45))
                .addGap(79, 79, 79)
                .addGroup(AddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Flight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Add_IdFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(827, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddToFlightLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(509, 509, 509))
        );
        AddToFlightLayout.setVerticalGroup(
            AddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddToFlightLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(AddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddToFlightLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel44))
                    .addComponent(Add_IdFlight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(AddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(Flight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 288, Short.MAX_VALUE)
                .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );

        jTabbedPane1.addTab("Add to flight", AddToFlight);

        TableFligths.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        TableFligths.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Departure Date", "Arrival Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TableFligths);

        RefreshMyFligths.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        RefreshMyFligths.setText("Refresh");
        RefreshMyFligths.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshMyFligthsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ShowMyFligthsLayout = new javax.swing.GroupLayout(ShowMyFligths);
        ShowMyFligths.setLayout(ShowMyFligthsLayout);
        ShowMyFligthsLayout.setHorizontalGroup(
            ShowMyFligthsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowMyFligthsLayout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(291, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ShowMyFligthsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(RefreshMyFligths)
                .addGap(527, 527, 527))
        );
        ShowMyFligthsLayout.setVerticalGroup(
            ShowMyFligthsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowMyFligthsLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(RefreshMyFligths)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Show my flights", ShowMyFligths);

        TablePassengers.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        TablePassengers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Birthdate", "Age", "Phone", "Country", "Num Flight"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TablePassengers);

        RefreshPassegers.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        RefreshPassegers.setText("Refresh");
        RefreshPassegers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshPassegersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ShowAllPassegersLayout = new javax.swing.GroupLayout(ShowAllPassegers);
        ShowAllPassegers.setLayout(ShowAllPassegersLayout);
        ShowAllPassegersLayout.setHorizontalGroup(
            ShowAllPassegersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowAllPassegersLayout.createSequentialGroup()
                .addGroup(ShowAllPassegersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ShowAllPassegersLayout.createSequentialGroup()
                        .addGap(489, 489, 489)
                        .addComponent(RefreshPassegers))
                    .addGroup(ShowAllPassegersLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1078, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        ShowAllPassegersLayout.setVerticalGroup(
            ShowAllPassegersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ShowAllPassegersLayout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(RefreshPassegers)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Show all passengers", ShowAllPassegers);

        FlightsTable.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        FlightsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Departure Airport ID", "Arrival Airport ID", "Scale Airport ID", "Departure Date", "Arrival Date", "Plane ID", "Number Passengers"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(FlightsTable);

        TableAllFlights.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        TableAllFlights.setText("Refresh");
        TableAllFlights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TableAllFlightsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ShowAllFlightsLayout = new javax.swing.GroupLayout(ShowAllFlights);
        ShowAllFlights.setLayout(ShowAllFlightsLayout);
        ShowAllFlightsLayout.setHorizontalGroup(
            ShowAllFlightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowAllFlightsLayout.createSequentialGroup()
                .addGroup(ShowAllFlightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ShowAllFlightsLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ShowAllFlightsLayout.createSequentialGroup()
                        .addGap(521, 521, 521)
                        .addComponent(TableAllFlights)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        ShowAllFlightsLayout.setVerticalGroup(
            ShowAllFlightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowAllFlightsLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(TableAllFlights)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Show all flights", ShowAllFlights);

        RefreshPlanes.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        RefreshPlanes.setText("Refresh");
        RefreshPlanes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshPlanesActionPerformed(evt);
            }
        });

        TablePlanes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Brand", "Model", "Max Capacity", "Airline", "Number Flights"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(TablePlanes);

        javax.swing.GroupLayout ShowPlanesLayout = new javax.swing.GroupLayout(ShowPlanes);
        ShowPlanes.setLayout(ShowPlanesLayout);
        ShowPlanesLayout.setHorizontalGroup(
            ShowPlanesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowPlanesLayout.createSequentialGroup()
                .addGroup(ShowPlanesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ShowPlanesLayout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(RefreshPlanes))
                    .addGroup(ShowPlanesLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(189, Short.MAX_VALUE))
        );
        ShowPlanesLayout.setVerticalGroup(
            ShowPlanesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ShowPlanesLayout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(RefreshPlanes)
                .addGap(17, 17, 17))
        );

        jTabbedPane1.addTab("Show all planes", ShowPlanes);

        TableLocations.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airport ID", "Airport Name", "City", "Country"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(TableLocations);

        RefreshLocations.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        RefreshLocations.setText("Refresh");
        RefreshLocations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshLocationsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ShowAllLocationsLayout = new javax.swing.GroupLayout(ShowAllLocations);
        ShowAllLocations.setLayout(ShowAllLocationsLayout);
        ShowAllLocationsLayout.setHorizontalGroup(
            ShowAllLocationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ShowAllLocationsLayout.createSequentialGroup()
                .addGroup(ShowAllLocationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ShowAllLocationsLayout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(RefreshLocations))
                    .addGroup(ShowAllLocationsLayout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(272, Short.MAX_VALUE))
        );
        ShowAllLocationsLayout.setVerticalGroup(
            ShowAllLocationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ShowAllLocationsLayout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(RefreshLocations)
                .addGap(17, 17, 17))
        );

        jTabbedPane1.addTab("Show all locations", ShowAllLocations);

        FlightDelay_Hour.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        FlightDelay_Hour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        jLabel46.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel46.setText("Hours:");

        jLabel47.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel47.setText("ID:");

        FlightDelay_Id.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        FlightDelay_Id.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID" }));

        jLabel48.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel48.setText("Minutes:");

        FlightDelay_Minute.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        FlightDelay_Minute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        Delay.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        Delay.setText("Delay");
        Delay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DelayFlightLayout = new javax.swing.GroupLayout(DelayFlight);
        DelayFlight.setLayout(DelayFlightLayout);
        DelayFlightLayout.setHorizontalGroup(
            DelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DelayFlightLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(DelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DelayFlightLayout.createSequentialGroup()
                        .addComponent(jLabel48)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(FlightDelay_Minute, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DelayFlightLayout.createSequentialGroup()
                        .addGroup(DelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel47)
                            .addComponent(jLabel46))
                        .addGap(79, 79, 79)
                        .addGroup(DelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FlightDelay_Hour, 0, 105, Short.MAX_VALUE)
                            .addComponent(FlightDelay_Id, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(820, 820, 820))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DelayFlightLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Delay)
                .addGap(531, 531, 531))
        );
        DelayFlightLayout.setVerticalGroup(
            DelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DelayFlightLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(DelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(FlightDelay_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(DelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(FlightDelay_Hour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(DelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(FlightDelay_Minute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, Short.MAX_VALUE)
                .addComponent(Delay)
                .addGap(33, 33, 33))
        );

        jTabbedPane1.addTab("Delay flight", DelayFlight);

        panelRound1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 41, 1150, 620));

        javax.swing.GroupLayout panelRound3Layout = new javax.swing.GroupLayout(panelRound3);
        panelRound3.setLayout(panelRound3Layout);
        panelRound3Layout.setHorizontalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1150, Short.MAX_VALUE)
        );
        panelRound3Layout.setVerticalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );

        panelRound1.add(panelRound3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 660, 1150, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void panelRound2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelRound2MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_panelRound2MousePressed

    private void panelRound2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelRound2MouseDragged
        this.setLocation(this.getLocation().x + evt.getX() - x, this.getLocation().y + evt.getY() - y);
    }//GEN-LAST:event_panelRound2MouseDragged

    private void administratorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_administratorActionPerformed
        if (user.isSelected()) {
            user.setSelected(false);
            userSelect.setSelectedIndex(0);

        }
        for (int i = 1; i < jTabbedPane1.getTabCount(); i++) {
                jTabbedPane1.setEnabledAt(i, true);
        }
        jTabbedPane1.setEnabledAt(5, false);
        jTabbedPane1.setEnabledAt(6, false);
    }//GEN-LAST:event_administratorActionPerformed

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        if (administrator.isSelected()) {
            administrator.setSelected(false);
        }
        for (int i = 1; i < jTabbedPane1.getTabCount(); i++) {

            jTabbedPane1.setEnabledAt(i, false);

        }
        jTabbedPane1.setEnabledAt(9, true);
        jTabbedPane1.setEnabledAt(5, true);
        jTabbedPane1.setEnabledAt(6, true);
        jTabbedPane1.setEnabledAt(7, true);
        jTabbedPane1.setEnabledAt(11, true);
    }//GEN-LAST:event_userActionPerformed

    private void RegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterActionPerformed
 // Obtener los valores directamente de los campos
String idStr = Id.getText();
String firstname = FirstName.getText();
String lastname = LastName.getText();

// Obtener valores seguros para día y mes
String month = String.valueOf(MONTH.getSelectedIndex() ); 
String day = String.valueOf(DAY.getSelectedIndex() );
if (day.length() == 1) {
    day = "0" + day;
}
if (month.length() == 1) {
    month = "0" + month;
}

// Formatear la fecha de nacimiento como cadena
String birthDateStr = Birthdate.getText().trim() + "-" + month + "-" + day;
String country = Country.getText();
String countryPhoneCodeStr = DialingCode.getText();
String phoneStr = NumberPhone.getText();



// Llamar al controlador para crear el pasajero
Response response = PassengerController.createPassenger(
    idStr, firstname, lastname, birthDateStr, country,countryPhoneCodeStr, phoneStr);

// Manejo de la respuesta
if (response.getStatus() >= 500) {
    JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
} else if (response.getStatus() >= 400) {
    JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
} else {
    JOptionPane.showMessageDialog(null, response.getMessage(), "Éxito", JOptionPane.INFORMATION_MESSAGE);

    // Limpiar campos después de éxito
    Id.setText("");
    FirstName.setText("");
    LastName.setText("");
    Birthdate.setText("");
    MONTH.setSelectedIndex(0);
    DAY.setSelectedIndex(0);
    DialingCode.setText("");
    NumberPhone.setText("");
    Country.setText("");

    this.userSelect.addItem(idStr);
}

    }//GEN-LAST:event_RegisterActionPerformed

    private void CreateAirlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateAirlineActionPerformed
        // TODO add your handling code here:
        String id = Airplane_Id.getText();
        String brand = Brand.getText();
        String model = Model.getText();
        String maxCapacity = MaxCapacity.getText();
        String airline = Airline.getText();
        

        Response response = PlaneController.createPlane(
    id, brand, model,
    maxCapacity, airline);
        
        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
             JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
        JOptionPane.showMessageDialog(null, response.getMessage(), "Éxito", JOptionPane.INFORMATION_MESSAGE);

        
    Airplane_Id.setText("");
    Brand.setText("");
    Model.setText("");
    MaxCapacity.setText("");
    Airline.setText("");
        
        this.Plane.addItem(id);
}
    }//GEN-LAST:event_CreateAirlineActionPerformed

    private void CreateLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateLocationActionPerformed
        // TODO add your handling code here:
        String id = Airport_Id.getText();
        String name = Airport_Name.getText();
        String city = Airport_City.getText();
        String country = Airport_Country.getText();
        String latitude = Airport_latitude.getText();
        String longitude = Airport_Longitude.getText();

        Response response = LocationController.createLocation(
            id, name, city, country, latitude, longitude);
        
        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
             JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
        JOptionPane.showMessageDialog(null, response.getMessage(), "Éxito", JOptionPane.INFORMATION_MESSAGE);

        
    Airplane_Id.setText("");
    Brand.setText("");
    Model.setText("");
    MaxCapacity.setText("");
    Airline.setText("");

        this.Location_Flight.addItem(id);
        this.ArrivalLocation.addItem(id);
        this.ScaleLocation.addItem(id);
        }
    }//GEN-LAST:event_CreateLocationActionPerformed

    private void CreateFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateFlightActionPerformed
        // TODO add your handling code here:
       
String id = Flight_Id.getText();
String planeId = Plane.getItemAt(Plane.getSelectedIndex());
String departureLocationId = Location_Flight.getItemAt(Location_Flight.getSelectedIndex());
String arrivalLocationId = ArrivalLocation.getItemAt(ArrivalLocation.getSelectedIndex());
String scaleLocationId = ScaleLocation.getItemAt(ScaleLocation.getSelectedIndex());
String year = Year.getText();
String month = Month_Date.getItemAt(Month_Date.getSelectedIndex());
String day = Day_date.getItemAt(Day_date.getSelectedIndex());
String hour = Hour_Date.getItemAt(Hour_Date.getSelectedIndex());
String minutes = Minute_Date.getItemAt(Minute_Date.getSelectedIndex());
String hoursDurationsArrival = Hour_Duration.getItemAt(Hour_Duration.getSelectedIndex());
String minutesDurationsArrival = Minute_duration.getItemAt(Minute_duration.getSelectedIndex());
String hoursDurationsScale = Hour.getItemAt(Hour.getSelectedIndex());
String minutesDurationsScale = Minute.getItemAt(Minute.getSelectedIndex());
// Crear la fecha de salida
if (day.length() == 1) {
    day = "0" + day;
}
if (month.length() == 1) {
    month = "0" + month;
}
if (hour.length() == 1) {
    hour = "0" + hour;
}
if (minutes.length() == 1) {
    minutes = "0" + minutes;
}

String departureDateStr = year + "-" + month + "-" + day + "T" + hour + ":" + minutes;


       Response response;
    response = FlightController.createFlight(id, planeId, departureLocationId, arrivalLocationId, departureDateStr, hoursDurationsArrival, minutesDurationsArrival, hoursDurationsScale,minutesDurationsScale ,scaleLocationId);

if (response.getStatus() >= 500) {
    JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
} else if (response.getStatus() >= 400) {
    JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
} else {
    JOptionPane.showMessageDialog(null, response.getMessage(), "Éxito", JOptionPane.INFORMATION_MESSAGE);
    
    // Limpiar campos después de éxito
    Flight_Id.setText("");
    Plane.setSelectedIndex(0);
    Location_Flight.setSelectedIndex(0);
    ArrivalLocation.setSelectedIndex(0);
    ScaleLocation.setSelectedIndex(0);
    Year.setText("");
    Month_Date.setSelectedIndex(0);
    Day_date.setSelectedIndex(0);
    Hour_Date.setSelectedIndex(0);
    Minute_Date.setSelectedIndex(0);
    Hour_Duration.setSelectedIndex(0);
    Minute_duration.setSelectedIndex(0);
    Hour.setSelectedIndex(0);
    Minute.setSelectedIndex(0);

        this.Flight.addItem(id);
}
    }//GEN-LAST:event_CreateFlightActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        String idStr = Update_Id.getText();
String firstname = Update_fName.getText();
String lastname = Update_lName.getText();

// Obtener valores seguros para día y mes
String month = String.valueOf(Update_Month.getSelectedIndex() ); 
String day = String.valueOf(Update_Day.getSelectedIndex() );
if (day.length() == 1) {
    day = "0" + day;
}
if (month.length() == 1) {
    month = "0" + month;
}

// Formatear la fecha de nacimiento como cadena
String birthDateStr = Update_Birthdate.getText().trim() + "-" + month + "-" + day;
String country = Update_Country.getText();
String countryPhoneCodeStr = Update_DialingCode.getText();
String phoneStr = Update_Number.getText();



// Llamar al controlador para crear el pasajero
Response response = PassengerController.updatePassenger(
    idStr, firstname, lastname, birthDateStr, country,countryPhoneCodeStr, phoneStr);

// Manejo de la respuesta
if (response.getStatus() >= 500) {
    JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
} else if (response.getStatus() >= 400) {
    JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
} else {
    JOptionPane.showMessageDialog(null, response.getMessage(), "Éxito", JOptionPane.INFORMATION_MESSAGE);

    // Limpiar campos después de éxito
    Update_fName.setText("");
    Update_lName.setText("");
    Update_Birthdate.setText("");
    Update_Month.setSelectedIndex(0);
    Update_Day.setSelectedIndex(0);
    Update_DialingCode.setText("");
    Update_Number.setText("");
    Update_Country.setText("");

    this.userSelect.addItem(idStr);
}
    }//GEN-LAST:event_UpdateActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        String passengerId = Add_IdFlight.getText();
        String flightId = Flight.getItemAt(Flight.getSelectedIndex());

        Response response = FlightController.addFlight(passengerId, flightId);
        
        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Response Message", JOptionPane.INFORMATION_MESSAGE);

            Add_IdFlight.setText("");
            Flight.setSelectedIndex(0);
        }
    }//GEN-LAST:event_AddActionPerformed

    private void DelayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelayActionPerformed
         // TODO add your handling code here:
        String flightId = FlightDelay_Id.getItemAt(FlightDelay_Id.getSelectedIndex());
        String hours = FlightDelay_Hour.getItemAt(FlightDelay_Hour.getSelectedIndex());
        String minutes = FlightDelay_Minute.getItemAt(FlightDelay_Minute.getSelectedIndex());
        
 Response response = FlightController.delayFlight(flightId, hours, minutes);

        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Response Message", JOptionPane.INFORMATION_MESSAGE);

            FlightDelay_Id.setSelectedIndex(0);
            FlightDelay_Hour.setSelectedIndex(0);
            FlightDelay_Minute.setSelectedIndex(0);
        }

    }//GEN-LAST:event_DelayActionPerformed

    private void RefreshMyFligthsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshMyFligthsActionPerformed
        // TODO add your handling code here:
        String passengerId = userSelect.getItemAt(userSelect.getSelectedIndex());

        
       

        Response response = PassengerController.showMyFlights(passengerId);

        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {

            ArrayList<Flight> flights = (ArrayList<Flight>) response.getObject();

            DefaultTableModel model = (DefaultTableModel) TableFligths.getModel();
            model.setRowCount(0);
            for (Flight flight : flights) {
                model.addRow(new Object[]{
                    flight.getId(),
                    flight.getDepartureDate(),
                    flight.calculateArrivalDate()
                });
            }
        }
    }//GEN-LAST:event_RefreshMyFligthsActionPerformed

    private void RefreshPassegersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshPassegersActionPerformed
         Response response = PassengerController.getSortedPassengers();

        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
            ArrayList<Passenger> passengers = (ArrayList<Passenger>) response.getObject();

          DefaultTableModel model = (DefaultTableModel) TablePassengers.getModel();
            model.setRowCount(0);
            for (Passenger passenger : passengers) {
                model.addRow(new Object[]{
                    passenger.getId(),
                    passenger.getFullname(),
                    passenger.getBirthDate(),
                    passenger.calculateAge(),
                    passenger.generateFullPhone(),
                    passenger.getCountry(),
                    passenger.getNumFlights()
                });
                System.out.println(passenger.getNumFlights());
            }
        }
    }//GEN-LAST:event_RefreshPassegersActionPerformed

    private void TableAllFlightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TableAllFlightsActionPerformed
        // TODO add your handling code here:
       Response response = FlightController.getSortedFlights();

        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
            ArrayList<Flight> flights = (ArrayList<Flight>) response.getObject();

            DefaultTableModel model = (DefaultTableModel) FlightsTable.getModel();
            model.setRowCount(0);
            for (Flight flight : flights) {
                model.addRow(new Object[]{
                    flight.getId(),
                    flight.getDepartureLocation().getAirportId(),
                    flight.getArrivalLocation().getAirportId(),
                    (flight.getScaleLocation() == null ? "-" : flight.getScaleLocation().getAirportId()),
                    flight.getDepartureDate(),
                    flight.calculateArrivalDate(),
                    flight.getPlane().getId(),
                    flight.getNumPassengers()
                });
            }
        }    
    }//GEN-LAST:event_TableAllFlightsActionPerformed

    private void RefreshPlanesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshPlanesActionPerformed
        // TODO add your handling code here: Response response = PlaneController.getSortedPlanes();
         Response response = PlaneController.getSortedPlanes();
       
        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
            ArrayList<Plane> planes = (ArrayList<Plane>) response.getObject();

            DefaultTableModel model = (DefaultTableModel) TablePlanes.getModel();
            model.setRowCount(0);
            for (Plane plane : planes) {
                model.addRow(new Object[]{
                    plane.getId(),
                    plane.getBrand(),
                    plane.getModel(),
                    plane.getMaxCapacity(),
                    plane.getAirline(),
                    plane.getNumFlights()
                });
            }
        }
    }//GEN-LAST:event_RefreshPlanesActionPerformed

    private void RefreshLocationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshLocationsActionPerformed
        // TODO add your handling code here:
         Response response = LocationController.getSortedLocations();
       
        if (response.getStatus() >= 500) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.ERROR_MESSAGE);
        } else if (response.getStatus() >= 400) {
            JOptionPane.showMessageDialog(null, response.getMessage(), "Error " + response.getStatus(), JOptionPane.WARNING_MESSAGE);
        } else {
            ArrayList<Location> locations = (ArrayList<Location>) response.getObject();
            
        DefaultTableModel model = (DefaultTableModel) TableLocations.getModel();
        model.setRowCount(0);
        for (Location location : locations) {
            model.addRow(new Object[]{location.getAirportId(), location.getAirportName(), location.getAirportCity(), location.getAirportCountry()});
        }
        }
    }//GEN-LAST:event_RefreshLocationsActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void userSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userSelectActionPerformed
        try {
            String id = userSelect.getSelectedItem().toString();
            if (! id.equals(userSelect.getItemAt(0))) {
                Update_Id.setText(id);
                Add_IdFlight.setText(id);
            }
            else{
                Update_Id.setText("");
                Add_IdFlight.setText("");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_userSelectActionPerformed

    private void IdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IdActionPerformed

    private void NumberPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumberPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NumberPhoneActionPerformed

    private void HourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HourActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HourActionPerformed

    private void MONTHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MONTHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MONTHActionPerformed

    private void Month_DateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Month_DateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Month_DateActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JPanel AddToFlight;
    private javax.swing.JTextField Add_IdFlight;
    private javax.swing.JPanel Administration;
    private javax.swing.JTextField Airline;
    private javax.swing.JPanel AirplaneRegistration;
    private javax.swing.JTextField Airplane_Id;
    private javax.swing.JTextField Airport_City;
    private javax.swing.JTextField Airport_Country;
    private javax.swing.JTextField Airport_Id;
    private javax.swing.JTextField Airport_Longitude;
    private javax.swing.JTextField Airport_Name;
    private javax.swing.JTextField Airport_latitude;
    private javax.swing.JComboBox<String> ArrivalLocation;
    private javax.swing.JTextField Birthdate;
    private javax.swing.JTextField Brand;
    private javax.swing.JTextField Country;
    private javax.swing.JButton CreateAirline;
    private javax.swing.JButton CreateFlight;
    private javax.swing.JButton CreateLocation;
    private javax.swing.JComboBox<String> DAY;
    private javax.swing.JComboBox<String> Day_date;
    private javax.swing.JButton Delay;
    private javax.swing.JPanel DelayFlight;
    private javax.swing.JTextField DialingCode;
    private javax.swing.JTextField FirstName;
    private javax.swing.JComboBox<String> Flight;
    private javax.swing.JComboBox<String> FlightDelay_Hour;
    private javax.swing.JComboBox<String> FlightDelay_Id;
    private javax.swing.JComboBox<String> FlightDelay_Minute;
    private javax.swing.JPanel FlightRegistration;
    private javax.swing.JTextField Flight_Id;
    private javax.swing.JTable FlightsTable;
    private javax.swing.JComboBox<String> Hour;
    private javax.swing.JComboBox<String> Hour_Date;
    private javax.swing.JComboBox<String> Hour_Duration;
    private javax.swing.JTextField Id;
    private javax.swing.JTextField LastName;
    private javax.swing.JPanel LocationRegistration;
    private javax.swing.JComboBox<String> Location_Flight;
    private javax.swing.JComboBox<String> MONTH;
    private javax.swing.JTextField MaxCapacity;
    private javax.swing.JComboBox<String> Minute;
    private javax.swing.JComboBox<String> Minute_Date;
    private javax.swing.JComboBox<String> Minute_duration;
    private javax.swing.JTextField Model;
    private javax.swing.JComboBox<String> Month_Date;
    private javax.swing.JTextField NumberPhone;
    private javax.swing.JPanel PassegerRegistration;
    private javax.swing.JComboBox<String> Plane;
    private javax.swing.JButton RefreshLocations;
    private javax.swing.JButton RefreshMyFligths;
    private javax.swing.JButton RefreshPassegers;
    private javax.swing.JButton RefreshPlanes;
    private javax.swing.JButton Register;
    private javax.swing.JComboBox<String> ScaleLocation;
    private javax.swing.JPanel ShowAllFlights;
    private javax.swing.JPanel ShowAllLocations;
    private javax.swing.JPanel ShowAllPassegers;
    private javax.swing.JPanel ShowMyFligths;
    private javax.swing.JPanel ShowPlanes;
    private javax.swing.JButton TableAllFlights;
    private javax.swing.JTable TableFligths;
    private javax.swing.JTable TableLocations;
    private javax.swing.JTable TablePassengers;
    private javax.swing.JTable TablePlanes;
    private javax.swing.JButton Update;
    private javax.swing.JPanel UpdateInfo;
    private javax.swing.JTextField Update_Birthdate;
    private javax.swing.JTextField Update_Country;
    private javax.swing.JComboBox<String> Update_Day;
    private javax.swing.JTextField Update_DialingCode;
    private javax.swing.JTextField Update_Id;
    private javax.swing.JComboBox<String> Update_Month;
    private javax.swing.JTextField Update_Number;
    private javax.swing.JTextField Update_fName;
    private javax.swing.JTextField Update_lName;
    private javax.swing.JTextField Year;
    private javax.swing.JRadioButton administrator;
    private javax.swing.JLabel airline;
    private javax.swing.JLabel birthdate;
    private javax.swing.JLabel brand;
    private javax.swing.JLabel country;
    private javax.swing.JLabel fName;
    private javax.swing.JLabel id;
    private javax.swing.JLabel id_Airplane;
    private javax.swing.JButton jButton13;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lName;
    private javax.swing.JLabel maxCapacity;
    private javax.swing.JLabel model;
    private core.views.PanelRound panelRound1;
    private core.views.PanelRound panelRound2;
    private core.views.PanelRound panelRound3;
    private javax.swing.JLabel phone;
    private javax.swing.JRadioButton user;
    private javax.swing.JComboBox<String> userSelect;
    // End of variables declaration//GEN-END:variables
}
